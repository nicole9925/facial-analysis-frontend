{"version":3,"sources":["components/Header.js","components/UploadService.js","static/indian_biased.png","static/indian_unbiased.png","static/white_unbiased.png","static/white_biased.png","static/EA_unbiased.png","static/EA_biased.png","text_data/accuracy.js","static/nicole.png","static/sudiksha.png","static/michael.png","components/Upload.js","components/ImageComponent.js","text_data/modelInfo.js","text_data/bias.js","components/Info.js","text_data/guide.js","components/Guide.js","components/GuideBox.js","components/AccuracyGraph.js","text_data/background.js","text_data/dataset.js","components/PieChart.js","components/GraphWidget.js","components/GraphWidget2.js","App.js","index.js"],"names":["Header","props","menu","title","progress","activeStyle","color","idleStyle","className","Object","keys","map","menuItem","style","img","name","require","data","Promise","resolve","setTimeout","then","accuracy","UploadComponent","withIcon","singleImage","label","buttonText","onChange","onImage","imgExtension","withPreview","labelStyles","fileContainerStyle","backgroundColor","padding","buttonStyles","Upload","useState","undefined","url","setImageUrl","errorMessage","setErrorMessage","setImage","disableButton","setDisabled","raceIG","setRaceIG","genderIG","setGenderIG","ageIG","setAgeIG","raceG","setRaceG","genderG","setGenderG","ageG","setAgeG","raceBP","setRaceBP","genderBP","setGenderBP","ageBP","setAgeBP","setResults","vizType","setVizType","showViz","src","alt","failedImages","successImages","a","error","message","submit","setProgress","UploadService","UploadToServer","resp","pp_img","race_ig","gender_ig","age_ig","race_grad","gender_grad","age_grad","race_back","gender_back","age_back","setData","race","gender","age","setPlotData1","race_results","setPlotData2","age_results","fetch","onClick","override","css","loading","size","disabled","unbiased","biased","indian_unbiased","indian_biased","white_unbiased","white_biased","EA_unbiased","EA_biased","michael","href","sudiksha","nicole","content","ImageComponent","1","header","body","2","Info","background","modelInfo","bias","guide","Guide","text","cursor","speed","eraseSpeed","eraseDelay","typingDelay","displayTextRenderer","GuideBox","expected","setExpected","submitDisabled","setSubmitDisabled","submitForm","e","preventDefault","console","log","onValueChange","event","target","defaultValue","type","value","margin","AccuracyGraph","height","width","xScale","d3","range","yScale","domain","this","cats","d","val","cat","x","y","plotTitle","colors","svg","bgGradient","append","attr","xAxis","yAxis","call","selectAll","enter","bandwidth","id","React","Component","dataset","PieChart","radius","Math","min","data_ready","sort","pie","arc","innerRadius","outerRadius","outerArc","posA","centroid","posB","posC","midangle","startAngle","endAngle","PI","pos","GraphWidget","plotData1","GraphWidget2","plotData2","Home","window","innerWidth","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae4fce2b.chunk.js","sourcesContent":["import React from 'react'\nimport './Header.css'\n\nconst Header = (props) => {\n    const menu = {\n                \"getUpload\": \"Background\", \n                \"Uploading\": \"→\", \n                \"Uploaded\":\"Prediction\", \n                \"Input\": \"→\", \n                \"Analysis\": \"Analysis\",\n                \"Transition\": \"→\", \n                \"bias\": \"Bias\",\n                \"Transition2\": \"→\", \n                \"conclusion\": \"Conclusion\"\n            };\n    let title = props.progress;\n    const activeStyle = {color: '#ffffff'}\n    const idleStyle = {color: '#40406B'}\n\n    return (\n        <div className=\"header-container\">\n            <div className=\"title-container\">\n                <h3 className=\"title-text\">Facial Analysis + Bias Visualization</h3>\n            </div>\n            <div className=\"nav-container\">\n                {\n                    Object.keys(menu).map(menuItem => \n                        <h3 className=\"title-labels\" style={title === menuItem ? activeStyle : idleStyle}>{menu[menuItem]}</h3>\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Header;","class UploadService {\n  async UploadToServer(img, name) {\n\n    // const data = new FormData();\n\n    // const parts = img[0].split(';')\n\n    // data.append('file', parts[2].split(\",\")[1]);\n    // data.append('filename', name);\n    \n    // let response = await fetch('https://facial-analysis-backend.herokuapp.com/api/upload/', {\n    //   method: 'POST',\n    //   body: data\n    // })\n    // let resp_data = await response.json()\n    // const resp = null;\n\n    // fetch('./text_data/image.json',{\n    //   headers : { \n    //     'Content-Type': 'application/json',\n    //     'Accept': 'application/json'\n    //     }\n    // }.then(function(response) {\n    //     resp = response.json()\n    // }))\n    const data = await require('./image.json');\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve()\n      }, 3000);\n    }).then(()=>{return data});\n    \n\n\n\n  }\n \n  // getImages() {\n  //   return http.get(\"/img\");\n  // }\n}\n\nexport default new UploadService();","export default __webpack_public_path__ + \"static/media/indian_biased.6ce38725.png\";","export default __webpack_public_path__ + \"static/media/indian_unbiased.0e8885fb.png\";","export default __webpack_public_path__ + \"static/media/white_unbiased.298bac47.png\";","export default __webpack_public_path__ + \"static/media/white_biased.8917dc0d.png\";","export default __webpack_public_path__ + \"static/media/EA_unbiased.ee9c6a0d.png\";","export default __webpack_public_path__ + \"static/media/EA_biased.a6807cb7.png\";","const accuracy =  {\n                \"unbiased\": {\"title\": \"Unbiased Race Accuracy (%)\",\n                \"data\": [\n                    {\"cat\": \"Black\", \"val\": 85}, \n                    {\"cat\": \"East Asian\", \"val\": 70}, \n                    {\"cat\": \"Indian\", \"val\": 66},\n                    {\"cat\": \"Latino/Hispanic\", \"val\": 58}, \n                    {\"cat\": \"Middle Eastern\", \"val\": 50}, \n                    {\"cat\": \"SE Asian\", \"val\": 60},\n                    {\"cat\": \"White\", \"val\": 65}\n                    ],\n                \"colors\": [\"#E323FF\", \"#7517F8\"]\n            },\n                \"biased\": {\n                    \"title\": \"Biased Race Accuracy (%)\",\n                    \"data\": [\n                        {\"cat\": \"Black\", \"val\": 86}, \n                        {\"cat\": \"East Asian\", \"val\": 42}, \n                        {\"cat\": \"Indian\", \"val\": 0},\n                        {\"cat\": \"Latino/Hispanic\", \"val\": 52}, \n                        {\"cat\": \"Middle Eastern\", \"val\": 0}, \n                        {\"cat\": \"SE Asian\", \"val\": 24},\n                        {\"cat\": \"White\", \"val\": 85}\n                        ],\n                    \"colors\": [\"#00FFC7\", \"#00A3FF\"]\n                }};\nexport default accuracy;","export default __webpack_public_path__ + \"static/media/nicole.72d78e29.png\";","export default __webpack_public_path__ + \"static/media/sudiksha.377ac5d6.png\";","export default __webpack_public_path__ + \"static/media/michael.c617493a.png\";","import React, {useState} from 'react'\nimport ImageUploader from 'react-images-upload'\nimport UploadService from './UploadService'\nimport CircleLoader from 'react-spinners/CircleLoader'\nimport { css } from \"@emotion/core\";\nimport './Upload.css';\nimport indian_biased from '../static/indian_biased.png'\nimport indian_unbiased from '../static/indian_unbiased.png'\nimport white_unbiased from '../static/white_unbiased.png'\nimport white_biased from '../static/white_biased.png'\nimport EA_unbiased from '../static/EA_unbiased.png'\nimport EA_biased from '../static/EA_biased.png'\nimport accuracy from '../text_data/accuracy'\nimport nicole from '../static/nicole.png'\nimport sudiksha from '../static/sudiksha.png'\nimport michael from '../static/michael.png'\n\nconst UploadComponent = props => (\n    <form>\n        <ImageUploader\n            key='image-uploader'\n            withIcon={false}\n            singleImage={true}\n            label=\"This is a static conceptual website. A default image has been set.\"\n            buttonText=\"Choose file\"\n            onChange={props.onImage}\n            imgExtension={['.jpg', '.png', '.jpeg']}\n            withPreview={true}\n            labelStyles = {{color: '#ffffff'}}\n            fileContainerStyle={{backgroundColor: 'var(--primary)', padding: '20px'}}\n            buttonStyles = {{backgroundColor: 'var(--highlight)'}}\n        />\n    </form>\n);\nconst Upload = (props) => {\n\n    const [url, setImageUrl] = useState(undefined);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [img, setImage] = useState(null);\n    const [disableButton, setDisabled] = useState(true);\n    const [raceIG, setRaceIG] = useState(null);\n    const [genderIG, setGenderIG] = useState(null);\n    const [ageIG, setAgeIG] = useState(null);\n    const [raceG, setRaceG] = useState(null);\n    const [genderG, setGenderG] = useState(null);\n    const [ageG, setAgeG] = useState(null);\n    const [raceBP, setRaceBP] = useState(null);\n    const [genderBP, setGenderBP] = useState(null);\n    const [ageBP, setAgeBP] = useState(null);\n    const [results, setResults] = useState(null);\n\n    const [vizType, setVizType] = useState(\"grad\");\n\n    const showViz = () => {\n        switch(vizType) {\n            case \"grad\":\n                return (<>\n                    <div className=\"ig-container\">\n                        <img className = \"image-container-ig\" src={raceG} alt=\"Race Grad\"></img>\n                        <img className = \"image-container-ig\" src={genderG} alt=\"Gender Grad\"></img>\n                        <img className = \"image-container-ig\" src={ageG} alt=\"Age Grad\"></img>\n                    </div>\n                </>)\n            case \"ig\":\n                return(<>\n                        <div className=\"ig-container\">\n                            <img className = \"image-container-ig\" src={raceIG} alt=\"Race Integrated Grad\"></img>\n                            <img className = \"image-container-ig\" src={genderIG} alt=\"Gender Integrated Grad\"></img>\n                            <img className = \"image-container-ig\" src={ageIG} alt=\"Age Integrated Grad\"></img>\n                        </div>\n                </>)\n            case \"bp\":\n                return(<>\n                        <div className=\"ig-container\">\n                            <img className = \"image-container-ig\" src={raceBP} alt=\"Race Back Prop\"></img>\n                            <img className = \"image-container-ig\" src={genderBP} alt=\"Gender Back Prop\"></img>\n                            <img className = \"image-container-ig\" src={ageBP} alt=\"Age Back Prop\"></img>\n                        </div>\n                </>)\n\n        }\n    }\n    // function usePrevious(value) {\n    //     const ref = useRef();\n    //     useEffect(() => {\n    //       ref.current = value;\n    //     });\n    //     return ref.current;\n    //   }\n    // const prevProgress = usePrevious(props.progress)\n    // useEffect(() => {\n        \n\n    // })\n    const onImage = async (failedImages, successImages) => {\n        try {\n            setDisabled(false)\n            setImage(successImages)\n\n        } catch(error) {\n            setErrorMessage(error.message);\n\n        } \n    }\n\n    const loading = () => {\n        const override = css`\n        display: block;\n        margin-left: 0px;\n        `;\n        \n        return(\n            <CircleLoader \n            className={'loader'}\n            color={'#80D8FF'}\n            loading={true}\n            size={150}\n            css={override}\n            />\n        )\n    }\n\n    const submit = async () => {\n        props.setProgress(\"Uploading\");\n        // const parts = img[0].split(';');\n        // const name = parts[1].split('=')[1];\n        const name = ''\n        const resp = await UploadService.UploadToServer(img, name)\n        setResults(resp)\n        setImageUrl('data:image/jpeg;base64,' + resp.pp_img)\n\n        setRaceIG( 'data:image/jpeg;base64,' + resp.race_ig)\n        setGenderIG( 'data:image/jpeg;base64,' + resp.gender_ig)\n        setAgeIG( 'data:image/jpeg;base64,' + resp.age_ig)\n\n        setRaceG( 'data:image/jpeg;base64,' + resp.race_grad)\n        setGenderG( 'data:image/jpeg;base64,' + resp.gender_grad)\n        setAgeG( 'data:image/jpeg;base64,' + resp.age_grad)\n\n        setRaceBP( 'data:image/jpeg;base64,' + resp.race_back)\n        setGenderBP( 'data:image/jpeg;base64,' + resp.gender_back)\n        setAgeBP( 'data:image/jpeg;base64,' + resp.age_back)\n\n        props.setProgress('Uploaded')\n        props.setData({\"race\": resp.race, \"gender\": resp.gender, \"age\": resp.age})\n        props.setPlotData1({\"title\": \"Race Prediction\", \"data\": resp.race_results, \"colors\": [\"#9900ff\", \"#00ccff\"]})\n        props.setPlotData2({\"title\": \"Age Prediction\", \"data\": resp.age_results, \"colors\": [\"#ff4aa7\", \"#e04646\"]})    }\n \n    const content = (props) => {\n        const progress = props.progress\n        switch(progress) {\n            case 'getUpload':\n                fetch('/api/clear/')\n                return <>\n                <div className=\"upload-container\">\n                    <UploadComponent onImage={onImage} url={url} />\n                    <button className=\"submit\" onClick={submit}>Submit</button>\n                </div>\n                </>\n                \n            case 'Uploading':\n                return loading()\n            case 'Uploaded':\n                return (\n                <>\n                    <div className=\"image-container\">\n                        <img className = \"pp-img\" src={url} alt=\"Your Face\"></img>\n                    </div>\n                </>\n                )\n            case 'uploadError':\n                return (\n                    <>\n                        <div className=\"error-message\">{errorMessage}</div>\n                        <div className=\"upload-container\">\n                            <UploadComponent onImage={onImage} url={url} />\n                            <button className=\"submit\" onClick={submit} disabled={disableButton}>Submit</button>\n                        </div>\n                    </>\n                )\n            case 'Analysis':\n                return (\n                <>  \n                <div className=\"grid\">\n                    <div className=\"viz-headers\">\n                        <h2>Race</h2>\n                        <h2>Gender</h2>\n                        <h2>Age</h2>\n                    </div>\n\n                    {showViz()}\n\n                    <div className=\"viz-button-container\">\n                        <button className=\"viz-button\" name=\"grad\" onClick={() => setVizType('grad')}>Grad-CAM</button>\n                        <button className=\"viz-button\" name=\"ig\" onClick={() => setVizType('bp')}>Guided BP</button>\n                        <button className=\"viz-button\" name=\"bp\" onClick={() => setVizType('ig')}>Integrated Grad</button>\n                    </div>                    \n                </div>\n\n\n                </>\n                )\n            case 'bias':\n                props.setPlotData1(accuracy.unbiased)\n                props.setPlotData2(accuracy.biased)\n                return (<>\n                    <div className=\"grid-biased\">\n                        <div className=\"viz-headers\">\n                            <p><u>Unbiased</u></p>\n                            <p><u>Biased</u></p>\n                        </div>\n                        <div className=\"g-container\">\n                            <div className=\"wrapper\">\n                                <div className=\"viz-with_cap\">\n                                    <img className = \"image-container-ig\" src={indian_unbiased} alt=\"Indian Unbiased\"></img>\n                                    <div className=\"caption-wrapper\">\n                                        <p>Prediction: Indian</p>\n                                        <p>\n                                            This prediction was correct. We can see that salient feature identified by Grad-CAM was the eyes.\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"wrapper\">\n                                <div className=\"viz-with_cap\">\n                                    <img className = \"image-container-ig\" src={indian_biased} alt=\"Indian Biased\"></img>\n                                    <div className=\"caption-wrapper\">\n                                        <p>Prediction: Latino/Hispanic</p>\n                                        <p>\n                                            This is an image of a young Indian girl. The fair model predicted the race correctly as Indian but the biased model predicted Latino Hispanic. \n                                            In this example, the Grad-CAM results for the fair model shows a strong focus on the eye region and the biased model covers a similar region but \n                                            the activation is not as strong. The Indian race was very underrepresented in the biased dataset which can be depicted by the performance of the biased \n                                            and unbiased models after applying Grad-cam. \n                                        </p>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"g-container\">\n                                <div className=\"wrapper\">\n                                    <div className=\"viz-with_cap\">\n                                        <img className = \"image-container-ig\" src={white_unbiased} alt=\"White Unbiased\"></img>\n                                        <div className=\"caption-wrapper\">\n                                            <p>Prediction: White</p>\n                                            <p>\n                                            This image is of a person who’s ground-truth label is White. The fair model predicted White and shows that the model made its prediction by focusing on the region around the eye.\n                                            These results depict that the fair model was a stronger model in this case since it had stronger activation weights for the highlighted features than the biased model which seems to be the weaker model. \n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"wrapper\">\n                                    <div className=\"viz-with_cap\">\n                                        <img className = \"image-container-ig\" src={white_biased} alt=\"White Biased\"></img>\n                                        <div className=\"caption-wrapper\">\n                                            <p>Prediction: White</p>\n                                            <p>\n                                            Unlike the unbiased model, the biased model, which also predicted White, shows a slight amount of activation in the same eye region. The biased model seems to have weaker activation since in the biased dataset White is the overrepresented race and therefore could be assumed as a default prediction which led to the model not picking out specific salient features to make its classification. This example shows how even when two models make the same prediction, users can use Grad-CAM to distinguish the stronger and weaker model. \n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                        </div>\n                        <div className=\"g-container\">\n                        <div className=\"wrapper\">\n                                <div className=\"viz-with_cap\">\n                                        <img className = \"image-container-ig\" src={EA_unbiased} alt=\"EA Unbiased\"></img>\n                                        <div className=\"caption-wrapper\">\n                                            <p>Prediction: East Asian</p>\n                                            <p>\n                                            The Grad-CAM shows that the fair model for our East Asian example seems to have focused on the inner region of the eye.\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"viz-with_cap\">\n                                        <img className = \"image-container-ig\" src={EA_biased} alt=\"EA Biased\"></img>\n                                        <div className=\"caption-wrapper\">\n                                            <p>Prediction: East Asian</p>\n                                            <p>\n                                                There is not much activation in the biased model example. While this specific prediction was correct, the model's inability\n                                                to detect salient features could explain why the biased model’s accuracy for this East Asians. \n                                            </p>\n\n                                        </div>\n                                    </div>\n                                </div>\n                    </div>\n                </>)\n            case \"conclusion\":\n                return (<>\n                <div className=\"image-container\">\n                <div className=\"g-container\">\n                        <div className=\"wrapper\">\n                                <div className=\"viz-with_cap_us\">\n                                        <img className = \"image-container-us\" src={michael} alt=\"Michael\"></img>\n                                        <div className=\"caption-wrapper\">\n                                            <p>Models, Integrated Gradient Visualization</p>\n                                            <p>\n                                            Contact: <a href=\"https://www.linkedin.com/in/michael-m459/\">here</a>\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"viz-with_cap_us\">\n                                        <img className = \"image-container-us\" src={sudiksha} alt=\"Sudiksha\"></img>\n                                        <div className=\"caption-wrapper\">\n                                            <p>Grad-CAM Visualization</p>\n                                            <p>\n                                                Contact: <a href=\"https://www.linkedin.com/in/sudiksha-sarvepalli/\">here</a>\n                                            </p>\n\n                                        </div>\n                                    </div>\n                                    <div className=\"viz-with_cap_us\">\n                                        <img className = \"image-container-us\" src={nicole} alt=\"Nicole\"></img>\n                                        <div className=\"caption-wrapper\">\n                                            <p>Web Application</p>\n                                            <p>\n                                            Contact: <a href=\"www.linkedin.com/in/nicole-mandy-lee\">here</a>\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                         </div>\n            </>)\n            default:\n                return <>\n                    <div className=\"image-container\">\n                        <img className = \"pp-img\" src={url} alt=\"Your Face\"></img>\n                    </div>\n                </>\n        }\n        \n    }\n\n    return (\n        <div>\n            {content(props)}\n        </div>\n    )\n}\n\nexport default Upload;","import React from 'react'\nimport Upload from './Upload'\nimport './ImageComponent.css'\n\nconst ImageComponent = (props) => {\n    \n    var progress = props.progress\n\n    const content = () => {\n        switch(progress) {  \n            case 'getUpload':\n                return (\n                    <>\n                    <div className=\"upload-container\">\n                        <Upload setProgress={props.setProgress} \n                                setData={props.setData} \n                                setPlotData1={props.setPlotData1}\n                                setPlotData2={props.setPlotData2} \n                                progress={progress}></Upload>\n                    </div>\n                    </>\n                )\n            default:\n                return (\n                    <>\n                    <div className=\"upload-container\">\n                        <Upload setProgress={props.setProgress} \n                                setData={props.setData}\n                                setPlotData1={props.setPlotData1} \n                                setPlotData2={props.setPlotData2} \n                                progress={progress}></Upload>\n                    </div>\n                    </>\n                )\n        }\n    }\n    return (\n        <>\n            <div>\n                {content()}\n            </div>\n        </>\n    )\n}\n\nexport default ImageComponent;","const modelInfo =  {1: {\n    header: \"Model\",\n    body: \"Our model was trained using a convolutional neural network (CNN). We do not need to get into the details of how neural networks operate right now, but CNNs, which are used often for image processing, optimize what is known as filters. CNN filters have quite a lot in common with the filters in our everyday lives - they pick out the most important information and utilize them to make predictions. We will be unveiling the trained filters that showcase the salient features in a face, through XAI techniques.\"\n},\n2: {\n    header: \"XAI\",\n    body: \"XAI, which is short for explainable AI, are methods used to explain the “black box” that is artificial learning. They help developers and the general public alike see the inner workings of a machine learning model. For our web application, we used explainable AI to visualize what a model would look like with and without bias. As you can see, our biased model did assign one of our three examples correctly. Without properly accessing the model with XAI techniques, we would’ve been unable to tell if our model was biased, and it could have posed difficulties in the future. There are three types of visualizations you can explore. Grad-CAM and guided back-propagation are similar and generated together. They both show the salient features in the last filter of our CNN. Red denotes the area with the most emphasis, while blue/purple represents the areas with less emphasis. The guided-backpropagation visualizations may make those areas more clear visually. On the other hand, integrated gradient visualizations are good for object localization. Given a particular category, the model will mark the areas in which they detect the object of your choosing. We’ve displayed the integrated gradients results with the category set as your predicted race, gender, and age.\"\n}\n};\n\nexport default {modelInfo};","const bias =  {1: {\n    header: \"Our Biased Model\",\n    body: \"Our biased model (biased in regards to race) was trained using a personally made dataset using the 2019 US Census data for reference. Thus, our biased dataset race distribution of the United States. The neural network configuations we used were the same.\"\n},\n2: {\n    header: \"Analysis\",\n    body: \"As shown in the comparisons, a model trained on a biased dataset fails to pinpoint salient features of a face. For our current objective, this doesn't pose too large of a problem as the accuracy actually doesn't decrease by much. However, there are other situations where models trained on biased data can lead to discriminatory practices. For example, a facial recognition algorithm that does not detect salient features in a face could lead to misidentification that may aggravate issues in policing. Tangentially, there are similar problems in algorithms that power self-driving cars. Studies show that they are more likely to drive into black people. With a lack of representation in training data and in the technology field in general, these seemingly guileless discrepencies between accuracy of performance for different race groups can yield life-changing damage to communities if precipitously put into production.\"\n}\n};\n\nexport default {bias};","import React from 'react'\nimport './Info.css'\nimport modelInfo from '../text_data/modelInfo'\nimport bias from '../text_data/bias'\n\nconst Info = (props) => {\n    var progress = props.progress;\n    var background = props.data;\n    // console.log(background)\n    const content = () => {\n        switch(progress) {\n            case 'getUpload':\n                return (\n                    <>\n                    <div className=\"background-container\">\n                        <h3>{background.background[1][\"header\"]}</h3>\n                        <p>{background.background[1][\"body\"]}</p>\n\n                        <h3>{background.background[2][\"header\"]}</h3>\n                        <p>{background.background[2][\"body\"]}</p>\n                    </div>\n                    </>\n                )\n            case 'Uploading':\n                return (\n                    <>\n                    <div className=\"background-container\">\n                        <h3>{background.background[1][\"header\"]}</h3>\n                        <p>{background.background[1][\"body\"]}</p>\n\n                        <h3>{background.background[2][\"header\"]}</h3>\n                        <p>{background.background[2][\"body\"]}</p>\n                    </div>\n                    </>\n                )\n            case 'Uploaded':\n                return ( <>\n                <div className=\"results-container\">\n                    <h3><strong>OUR GUESSES:</strong></h3>\n                    <div className=\"results\">\n                        <h5><b>Race:</b></h5>\n                        <h5>{background[\"race\"]}</h5>\n                    </div>\n                    <div className=\"results\">\n                        <h5><b>Gender:</b></h5>\n                        <h5>{background[\"gender\"]}</h5>\n                    </div>\n                    <div className=\"results\">\n                        <h5><b>Age:</b></h5>\n                        <h5>{background[\"age\"]}</h5>\n                    </div>\n                </div>\n                </>\n                )\n            case 'Input':\n                return ( <>\n                <div className=\"correction-container\">\n                </div>\n                </>\n                )\n            case 'Analysis':\n                return ( <>\n                    <div className=\"background-container\">\n                        <h3>{modelInfo.modelInfo[1][\"header\"]}</h3>\n                        <p>{modelInfo.modelInfo[1][\"body\"]}</p>\n\n                        <h3>{modelInfo.modelInfo[2][\"header\"]}</h3>\n                        <p>{modelInfo.modelInfo[2][\"body\"]}</p>\n                    </div>\n                </>\n                )\n            case 'bias':\n                return ( <>\n                    <div className=\"background-container\">\n                        <h3>{bias.bias[1][\"header\"]}</h3>\n                        <p>{bias.bias[1][\"body\"]}</p>\n\n                        <h3>{bias.bias[2][\"header\"]}</h3>\n                        <p>{bias.bias[2][\"body\"]}</p>\n                    </div>\n                </>\n                )\n            case 'conclusion':\n                return(<>\n                    <div className=\"background-container\">\n                        <p><b>References</b></p>\n                        <ul>\n                            <li>Prediction Models: <a href=\"https://github.com/rodrigobressan/keras-multi-output-model-utk-face\">github</a></li>\n                            <li>Grad-CAM: <a href=\"https://github.com/rodrigobressan/keras-multi-output-model-utk-face\">github</a></li>\n                            <li>Integrated Gradients: <a href=\"https://www.tensorflow.org/tutorials/interpretability/integrated_gradients\">link</a></li>\n                        </ul>\n                        <p><b>Works Cited + Further Reading</b></p>\n                        <ul>\n                            <li><a href=\"https://www.researchgate.net/figure/Sample-images-from-FairFace-dataset-10_fig4_344373604\">Understanding Fairness of Gender Classification Algorithms Across Gender-Race Groups</a></li>\n                            <li><a href=\"https://www.nature.com/articles/d41586-020-03186-4\">Is facial recognition too biased to be let loose?</a></li>\n                            <li><a href=\"https://www.nytimes.com/2020/01/12/technology/facial-recognition-police.html\">How the Police Use Facial Recognition, and Where It Falls Short</a></li>\n                        </ul>\n                    </div>\n                    \n                </>)\n            default:\n                return (\n                    <>\n                    </>\n                )\n        }\n    }\n    return (\n        <>\n            <div>\n                {content()}\n            </div>\n        </>\n    )\n}\n\nexport default Info;","const guide =  {\"getUpload\": {\n    \"text\": \"Hello there! To start, please input an image of a face. Or, read through the background information on the left!\",\n    \"speed\": 20,\n    \"eraseDelay\": 10000000,\n    \"typingDelay\": 0,\n    \"eraseSpeed\": 30},\n\"Uploading\": {\"text\": \"Loading...this might take a while...\", \n    \"speed\": 20,\n    \"eraseDelay\": 1000,\n    \"typingDelay\": 100,\n    \"eraseSpeed\": 30},\n\"Uploaded\": {\"text\": \"Your results are out! Is this what you expected?\", \n    \"speed\": 20,\n    \"eraseDelay\": 10000000,\n    \"typingDelay\": 100,\n    \"eraseSpeed\": 30},\n\"Input\": {\"text\": \"Sorry! This page is in construction.\", \n    \"speed\": 20,\n    \"eraseDelay\": 10000000,\n    \"typingDelay\": 100,\n    \"eraseSpeed\": 30},\n\"Analysis\": {\"text\": \"Here is what our model focused on with respect to our predictions.\", \n\"speed\": 20,\n\"eraseDelay\": 10000000,\n\"typingDelay\": 100,\n\"eraseSpeed\": 30},\n\n\"bias\": {\"text\": \"We mentioned in the last slide that biased data yields considerable effects in a model. Here's what our model sees when given biased data vs. unbiased data. Hover over the images to read their captions!\", \n\"speed\": 10,\n\"eraseDelay\": 10000000,\n\"typingDelay\": 100,\n\"eraseSpeed\": 30},\n\"conclusion\": {\"text\": \"And...that's a wrap. Thanks for visiting - we hope you were able to get some insight into how machine learning for facial analysis tools see you!\", \n\"speed\": 10,\n\"eraseDelay\": 10000000,\n\"typingDelay\": 100,\n\"eraseSpeed\": 30}\n\n};\n\nexport default {guide};","import React from 'react';\nimport guide from '../text_data/guide'\nimport ReactTypingEffect from 'react-typing-effect';\n \n const Guide = (props) => {\n\n    const beginTyping = () => {\n        return (<>\n            <ReactTypingEffect\n              key = {props.progress}\n              text={guide.guide[props.progress][\"text\"]}\n              cursor={cursor => <h1 style={{color: \"#ffffff\"}}>{cursor}</h1>}\n              speed = {guide.guide[props.progress][\"speed\"]}\n              eraseSpeed = {guide.guide[props.progress][\"eraseSpeed\"]}\n              eraseDelay = {guide.guide[props.progress][\"eraseDelay\"]}\n              typingDelay = {guide.guide[props.progress][\"typingDelay\"]}\n              displayTextRenderer={(text) => {\n                return (\n                  <h4>\n                    {text}\n                  </h4>\n                );\n              }}        \n            />\n          </>\n            )\n    }\n\n    // const listen = () => {\n    //     switch(progress) {\n    //         case 'getUpload':\n    //             setContent(guide.guide['getUpload'])\n    //         case 'Uploading': \n    //             setContent(guide.guide['Uploading'])\n    //     }\n    // }\n\n    return (\n        <>\n            {beginTyping(props)}\n        </>\n    )\n }\n\n\nexport default Guide;","import React, {useState} from 'react'\nimport Guide from './Guide'\nimport './GuideBox.css'\n\nconst GuideBox = (props) => {\n\n    const [expected, setExpected] = useState(undefined)\n    const [submitDisabled, setSubmitDisabled] = useState(true);\n\n    const submitForm  = async (e) => {\n        e.preventDefault()\n        if (expected === 'Yes') {\n            props.setProgress('Analysis')\n            console.log(props.progress)\n        } else if (expected === 'No') {\n            // props.setProgress('Input')\n            props.setProgress('Analysis')\n        }\n    }\n    \n    const onValueChange = (event) => {\n        setExpected(event.target.defaultValue)\n        setSubmitDisabled(false)\n        // setExpected\n    }\n\n    const content = () => {\n        switch(props.progress) {  \n            case 'getUpload':\n                return (\n                    <>\n                    <div className=\"guide-bounding\">\n                        <Guide key = {props.progress} className=\"guide\" progress={props.progress}></Guide>\n                    </div>\n                    </>\n                )\n            case 'Uploading':\n                return ( <>\n                    <div className=\"guide-bounding\">\n                        <Guide key = {props.progress} className=\"guide\" progress={props.progress}></Guide>\n                    </div>\n                </>\n                )\n            case 'Uploaded':\n                return ( <>\n                    <div className=\"guide-bounding\">\n                        <div className = \"guide-split\">\n                            <Guide key = {props.progress} className=\"guide\" progress={props.progress}></Guide>\n                            <div className = \"guide-input\">\n                                <p className = \"guide-selections\">\n                                    <input className= \"options yes\" type=\"radio\" name=\"q2\" value=\"Yes\" onChange={onValueChange}/>Yes\n                                    <input className= \"options no\" type=\"radio\" name=\"q2\" value=\"No\" onChange={onValueChange}/>No\n                                    <button className = \"guide-submit submit\" onClick={submitForm} disabled={submitDisabled}>submit</button>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </>\n                )\n            case 'Input':\n                return ( <>\n                    <div className=\"guide-bounding\">\n                        <Guide key = {props.progress} className=\"guide\" progress={props.progress}></Guide>\n                    </div>\n                </>\n                )\n            case 'Analysis':\n                return ( <>\n                    <div className=\"guide-bounding\">\n                        <div className=\"guide-split\">\n                            <Guide key = {props.progress} className=\"guide\" progress={props.progress}></Guide>\n                            <button className = \"next-page submit\" onClick={() => props.setProgress(\"bias\")}>→</button>\n                        </div>\n                    </div>\n                </>\n                )\n            case 'bias':\n                return ( <>\n                    <div className=\"guide-bounding\">\n                        <div className=\"guide-split\">\n                            <Guide key = {props.progress} className=\"guide\" progress={props.progress}></Guide>\n                            <button className = \"next-page submit\" onClick={() => props.setProgress(\"conclusion\")}>→</button>\n                        </div>\n                    </div>\n                </>\n                )\n            case 'conclusion':\n                return ( <>\n                    <div className=\"guide-bounding\">\n                        <div className=\"guide-split\">\n                            <Guide key = {props.progress} className=\"guide\" progress={props.progress}></Guide>\n                        </div>\n                    </div>\n                </>\n                )\n            default:\n                return (\n                    <>\n\n                    </>\n                )\n        }\n    }\n    return (\n        <>\n            <div>\n                {content()}\n            </div>\n        </>\n    )\n}\n\nexport default GuideBox;","import React, { useRef, Component, useEffect } from 'react';\nimport * as d3 from \"d3\";\nimport './AccuracyGraph.css'\n\nconst margin = {\"right\": 20, \"left\": 30, \"top\": 30, \"bottom\": 30};\n\nclass AccuracyGraph extends React.Component {\n    \n    constructor(props) {\n        super(props)\n    }\n\n\n    height = 200;\n    width = 300;\n\n\n    xScale  = d3.scaleBand()\n        .range([ margin.left, this.width-margin.right ])\n\n    yScale = d3.scaleLinear()   \n        .domain([100, 0])\n        .range([margin.top, this.height-margin.top-margin.bottom]);\n\n    componentDidMount() {\n\n        const data = this.props.data\n\n        const values = data.map(function(d) {return d.val})\n        const cats = data.map(function(d) {return d.cat})\n\n        const x = this.xScale.domain(cats);;\n        const y = this.yScale;\n        const height = this.height;\n        const width = this.width;\n        const title = this.props.plotTitle;\n        const colors = this.props.colors;\n\n        const svg = d3.select(`#${this.props.className}`)\n\n        // Gradients\n        const defs = svg.append('defs');\n\n        const bgGradient = defs\n          .append('linearGradient')\n          .attr('id', `${this.props.className}-bg-gradient`)\n          .attr('gradientTransform', 'rotate(90)');\n      \n        bgGradient\n          .append('stop')\n          .attr('stop-color', colors[0])\n          .attr('offset', '0%');\n        bgGradient\n          .append('stop')\n          .attr('stop-color', colors[1])\n          .attr('offset', '100%');\n      \n        // Axes\n        const xAxis = d3.axisBottom(this.xScale);\n        const yAxis = d3.axisLeft(this.yScale);\n    \n        svg.append(\"g\")\n        .attr(\"class\", \"accuracy-axis\")\n        .attr(\"transform\", `translate(0, ${this.height-margin.top-margin.bottom})`)\n        .call(xAxis)\n        .selectAll(\"text\")\n        .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\n        .style(\"text-anchor\", \"end\");\n\n        svg.append(\"g\")\n        .attr(\"class\", \"accuracy-axis\")\n        .attr(\"transform\", `translate(${margin.left}, 0)`)\n        .call(yAxis)\n\n        // Bars\n        svg.selectAll(\"bars\")\n        .data(data)\n        .enter()\n        .append(\"rect\")\n            .attr(\"x\", function(d) {return x(d.cat) + x.bandwidth()/4})\n            .attr(\"y\", function(d) {return y(d.val)})\n            .attr(\"width\", x.bandwidth()/2)\n            .attr(\"height\", function(d) { return height-margin.top-margin.bottom - y(d.val)})\n            .attr(\"fill\", `url(#${this.props.className}-bg-gradient)`)\n        \n        svg.append(\"g\")\n        .append(\"text\")\n        .attr(\"x\", width/2)\n        .attr(\"y\", margin.top)\n        .attr(\"fill\", \"white\")\n        .text(title)\n        .style(\"text-anchor\", \"middle\");\n\n\n    }\n    \n    render() {\n        return(\n            <>\n            <svg id = {this.props.className} width={this.width} height={this.height}>\n            </svg>\n            </>\n        )\n    }\n}\n\nexport default AccuracyGraph;\n","const background =  {1: {\n    header: \"What is this?\",\n    body: \"Due to the burgeoning of machine learning and artificial intelligence technology, it may feel as though there are eyes perpetually watching us. It is undeniable that, whether it is through surveillance cameras, phones, or desktops, we are always exposed to being analyzed by merely living our everyday lives. The most frightening part about this phenomenon is that how and what these technologies record is oftentimes a mystery. As our society begins to yield more responsibility and credibility to image analysis and other machine learning software, we should know how they work before we collectively make informed decisions about them. So this application will bring you through the process of facial analysis to give you some insight into what your machine will typically see!\"\n},\n2: {\n    header: \"Dataset\",\n    body: \"Our model is trained on over 100,000 labelled images from the Fairface dataset, which has an equal distribution of people in one of seven unique race groups. The images are also labelled as one of two genders and nine age groups. Our biased dataset is a subset of our original dataset and is biased in regards to race. The distribution percentages were referenced from the US census data, thus the biased model is representative of a model trained on the US population.\"\n}\n};\n\nexport default {background};","const dataset =  {\n    \"unbiased\": {\"title\": \"Unbiased Dataset Dist.\",\n    \"data\": [\n        {\"cat\": \"Latino/Hisp.\", \"val\": 15.4}, \n        {\"cat\": \"Indian\", \"val\": 14.2},\n        {\"cat\": \"Middle Eastern\", \"val\": 10.6},\n        {\"cat\": \"SE Asian\", \"val\": 12.4}, \n        {\"cat\": \"Black\", \"val\": 14.1}, \n        {\"cat\": \"East Asian\", \"val\": 14.2}, \n        {\"cat\": \"White\", \"val\": 19.1}\n        ],\n    \"color\": [\"#9700de\", \"#9efff1\"]\n},\n    \"biased\": {\n        \"title\": \"Biased Dataset Dist.\",\n        \"data\": [\n            {\"cat\": \"Latino/Hisp.\", \"val\": 18.5},  \n            {\"cat\": \"Indian\", \"val\": 1.2},\n            {\"cat\": \"Middle Eastern\", \"val\": 2.4},\n            {\"cat\": \"SE Asian\", \"val\": 2.2}, \n            {\"cat\": \"Black\", \"val\": 13.4}, \n            {\"cat\": \"East Asian\", \"val\": 2.2}, \n            {\"cat\": \"White\", \"val\": 60.1}\n            ],\n    \"color\": [\"#40c9ff\", \"#ff4ac5\"]\n    }};\nexport default dataset;","import React from 'react';\nimport * as d3 from \"d3\";\nimport './PieChart.css'\n\n// const margin = {\"right\": 20, \"left\": 30, \"top\": 30, \"bottom\": 30};\nconst margin = 20\n\nclass PieChart extends React.Component {\n    \n    constructor(props) {\n        super(props)\n    }\n\n\n    height = 200;\n    width = 300;\n\n\n    radius = Math.min(this.width, this.height) / 2 - margin\n\n    componentDidMount() {\n        const data = this.props.data\n        const width = this.width\n        const height = this.height\n        const radius = this.radius\n        const color = this.props.color\n        const title = this.props.plotTitle\n\n        var svg = d3.select(`#${this.props.className}`)\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .append(\"g\")\n            .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n        // Gradients \n        const defs = svg.append('defs');\n\n        const bgGradient = defs\n            .append('linearGradient')\n            .attr('id', `${this.props.className}-bg-gradient`)\n            .attr('gradientTransform', 'rotate(90)');\n        \n        bgGradient\n            .append('stop')\n            .attr('stop-color', color[0])\n            .attr('offset', '0%');\n        bgGradient\n            .append('stop')\n            .attr('stop-color', color[1])\n            .attr('offset', '100%');\n\n        // Chart Components\n        var pie = d3.pie()\n        .sort(null) // Do not sort group by size\n        .value(function(d) {return d.val; })\n        var data_ready = pie(data)\n\n        var arc = d3.arc()\n        .innerRadius(radius * 0.5) \n        .outerRadius(radius * 0.8)\n\n        var outerArc = d3.arc()\n        .innerRadius(radius * 0.9)\n        .outerRadius(radius * 0.9)\n\n        svg\n        .selectAll('allSlices')\n        .data(data_ready)\n        .enter()\n        .append('path')\n        .attr('d', arc)\n        // .attr('fill', function(d){return(color(d.data.cat)) })\n        .attr('fill', `url(#${this.props.className}-bg-gradient)`)\n        .attr(\"stroke\", \"#1A1939\")\n        .style(\"stroke-width\", \"5px\")\n        .style(\"opacity\", 0.7)\n\n        svg\n        .selectAll('allPolylines')\n        .data(data_ready)\n        .enter()\n        .append('polyline')\n            .attr(\"stroke\", \"white\")\n            .style(\"fill\", \"none\")\n            .attr(\"stroke-width\", 1)\n            .attr('points', function(d) {\n                var posA = arc.centroid(d) // line insertion in the slice\n                var posB = outerArc.centroid(d) // line break: we use the other arc generator that has been built only for that\n                var posC = outerArc.centroid(d); // Label position = almost the same as posB\n                var midangle = d.startAngle + (d.endAngle - d.startAngle) / 2 // we need the angle to see if the X position will be at the extreme right or extreme left\n                posC[0] = radius * 0.95 * (midangle < Math.PI ? 1 : -1); // multiply by 1 or -1 to put it on the right or on the left\n                return [posA, posB, posC]\n             })\n    \n        svg\n        .selectAll('allLabels')\n        .data(data_ready)\n        .enter()\n        .append('text')\n        .attr(\"class\", \"pieLabels\")\n        .text( function(d) {return d.data.cat } )\n        .attr('transform', function(d) {\n            var pos = outerArc.centroid(d);\n            var midangle = d.startAngle + (d.endAngle - d.startAngle) / 2\n            pos[0] = radius * 0.99 * (midangle < Math.PI ? 1 : -1);\n            return 'translate(' + pos + ')';\n        })\n        .style('text-anchor', function(d) {\n            var midangle = d.startAngle + (d.endAngle - d.startAngle) / 2\n            return (midangle < Math.PI ? 'start' : 'end')\n        })\n        .attr(\"fill\", \"white\")\n        .attr(\"font-size\", \"10px\")\n\n        svg.append(\"g\")\n        .append(\"text\")\n        .attr(\"x\", 2)\n        .attr(\"y\", -80)\n        .attr(\"fill\", \"white\")\n        .text(title)\n        .style(\"text-anchor\", \"middle\");\n\n\n    }\n    \n    render() {\n        return(\n            <>\n            <svg id = {this.props.className} width={this.width} height={this.height}>\n            </svg>\n            </>\n        )\n    }\n}\n\nexport default PieChart;\n","import React from 'react';\nimport AccuracyGraph from './AccuracyGraph'\nimport dataset from '../text_data/dataset'\nimport PieChart from './PieChart'\n\nconst GraphWidget = (props) => {\n    const progress = props.progress\n    switch(progress) {\n        case 'getUpload':\n            return (\n            <>\n                <PieChart \n                    className=\"unbiasedPie\"\n                    data = {dataset[\"unbiased\"][\"data\"]}\n                    plotTitle = {dataset[\"unbiased\"][\"title\"]}\n                    color = {dataset[\"unbiased\"][\"color\"]}\n                />\n            </>)\n        case 'Uploading':\n            return (\n                <>\n                    <PieChart \n                        className=\"unbiasedPie\"\n                        data = {dataset[\"unbiased\"][\"data\"]}\n                        plotTitle = {dataset[\"unbiased\"][\"title\"]}\n                        color = {dataset[\"unbiased\"][\"color\"]}\n                    />\n                </>)\n        case \"Uploaded\": \n            if (props.plotData1 != null) {\n                return(\n                    <>\n                        <AccuracyGraph className=\"bar1\" \n                        key = {props.plotData1[\"title\"]}\n                        data ={props.plotData1[\"data\"]} \n                        plotTitle = {props.plotData1[\"title\"]} \n                        colors={props.plotData1[\"colors\"]} />\n                    </>\n                )\n            } return null\n        case \"Input\":\n            return(\n                <>\n                    <AccuracyGraph className=\"bar1\" \n                    key = {props.plotData1[\"title\"]}\n                    data ={props.plotData1[\"data\"]} \n                    plotTitle = {props.plotData1[\"title\"]} \n                    colors={props.plotData1[\"colors\"]} />\n                </>\n            )\n        case \"Analysis\":\n            return(\n                <>\n                    <AccuracyGraph className=\"bar1\" \n                    key = {props.plotData1[\"title\"]}\n                    data ={props.plotData1[\"data\"]} \n                    plotTitle = {props.plotData1[\"title\"]} \n                    colors={props.plotData1[\"colors\"]} />\n                </>\n            )\n        case \"bias\":\n            return(\n                <>\n                    <AccuracyGraph className=\"bar1\" \n                    key = {props.plotData1[\"title\"]}\n                    data ={props.plotData1[\"data\"]} \n                    plotTitle = {props.plotData1[\"title\"]} \n                    colors={props.plotData1[\"colors\"]} />\n                </>\n            )\n        case \"conclusion\":\n            return(\n                <>\n                    <div className=\"conclusion-info\">\n                        <p><b>Creators:</b> <br/><br/>Nicole Lee, Michael Hung, Sudiksha Sarvepalli</p>\n                        <p><b>About:</b> <br/><br/>This web application was created as an undergraduate senior project for the data science department at University of California, San Diego. It is categorized under the Explainable AI domain under Dr. Jürgen P. Schulze.</p>\n                    </div>\n                </>\n            )\n        default:\n            return null\n\n    }\n} \n\nexport default GraphWidget;\n","import React from 'react';\nimport AccuracyGraph from './AccuracyGraph'\nimport dataset from '../text_data/dataset'\nimport PieChart from './PieChart'\n\nconst GraphWidget2 = (props) => {\n    const progress = props.progress\n    switch(progress) {\n        case 'getUpload':\n            return (\n            <>\n                <PieChart \n                    className=\"biasedPie\"\n                    data = {dataset[\"biased\"][\"data\"]}\n                    plotTitle = {dataset[\"biased\"][\"title\"]}\n                    color = {dataset[\"biased\"][\"color\"]}\n                />\n            </>)\n        case 'Uploading':\n            return (\n                <>\n                    <PieChart \n                        className=\"biasedPie\"\n                        data = {dataset[\"biased\"][\"data\"]}\n                        plotTitle = {dataset[\"biased\"][\"title\"]}\n                        color = {dataset[\"biased\"][\"color\"]}\n                    />\n                </>)\n        case \"Uploaded\": \n            if (props.plotData2 != null) {\n                return(\n                    <>\n                        <AccuracyGraph className=\"bar2\" \n                        key = {props.plotData2[\"title\"]}\n                        data ={props.plotData2[\"data\"]} \n                        plotTitle = {props.plotData2[\"title\"]} \n                        colors={props.plotData2[\"colors\"]} />\n                    </>\n                )\n            } return null\n        case \"Input\":\n            return(\n                <>\n                    <AccuracyGraph className=\"bar2\" \n                    key = {props.plotData2[\"title\"]}\n                    data ={props.plotData2[\"data\"]} \n                    plotTitle = {props.plotData2[\"title\"]} \n                    colors={props.plotData2[\"colors\"]} />\n                </>\n            )\n        case \"Analysis\":\n            return(\n                <>\n                    <AccuracyGraph className=\"bar2\" \n                    key = {props.plotData2[\"title\"]}\n                    data ={props.plotData2[\"data\"]} \n                    plotTitle = {props.plotData2[\"title\"]} \n                    colors={props.plotData2[\"colors\"]} />\n                </>\n            )\n        case \"bias\":\n            return(\n                <>\n                    <AccuracyGraph className=\"bar2\" \n                    key = {props.plotData2[\"title\"]}\n                    data ={props.plotData2[\"data\"]} \n                    plotTitle = {props.plotData2[\"title\"]} \n                    colors={props.plotData2[\"colors\"]} />\n                </>\n            )\n        case \"conclusion\":\n            return(\n                <>\n                    <div className=\"conclusion-info\">\n                        <p><b>For more information:</b> <br/><br/> Check out our <a href=\"https://michael4706.github.io/XAI_Website/reference/\" style={{color: \"white\"}}>blog</a>.</p>\n                        \n                        <p><b>To view our report:</b> <br/><br/>Click here to download.</p>\n                    </div>\n                </>\n            )\n        default:\n            return null\n\n    }\n} \n\nexport default GraphWidget2;\n","import React, {useState} from 'react'\nimport './App.css';\nimport Header from './components/Header'\nimport ImageComponent from './components/ImageComponent'\nimport Info from './components/Info'\nimport GuideBox from './components/GuideBox'\nimport AccuracyGraph from './components/AccuracyGraph'\nimport background from './text_data/background'\nimport accuracy from './text_data/accuracy'\nimport GraphWidget from './components/GraphWidget'\nimport GraphWidget2 from './components/GraphWidget2'\n\nfunction Home() {\n\n  const [progress, setProgress] = useState('getUpload');\n  const [data, setData] = useState(background)\n  const [plotData1, setPlotData1] = useState(accuracy.unbiased)\n  const [plotData2, setPlotData2] = useState(accuracy.biased)\n  const [width, setWidth] = useState(window.innerWidth)\n\n  const notDesktop = width <= 1050;\n\n  if (notDesktop) {\n    return (\n      <>\n        <p className=\"desktop-warning\"> This app only works on desktops. Please increase your window size and refresh to view page. </p>\n      </>\n    )\n  }\n  return (\n    <>\n    <header>\n      <Header className=\"header\" progress={progress}></Header>\n    </header>\n    {/* <h2 className=\"page-title\">{title}</h2> */}\n    <div className=\"main-container\">\n      <div className=\"text-container\">\n        <div className=\"info-widget box\">\n          <Info key = {progress} data={data} progress={progress}></Info>\n          </div>\n          <div className=\"stats-container\">\n            <div className=\"stats-widget1 box\">\n              <div className=\"graph-box\">\n                {/* <AccuracyGraph className=\"bar\" \n                                key = {plotData1[\"title\"]}\n                                data ={plotData1[\"data\"]} \n                                plotTitle = {plotData1[\"title\"]} \n                                colors={plotData1[\"colors\"]} /> */}\n                  <GraphWidget \n                              className=\"pie1\"\n                              key = {progress}\n                              plotData1 = {plotData1}\n                              progress = {progress}\n                  />\n              </div>\n            </div>\n            <div className=\"stats-widget2 box\">\n              <div className=\"graph-box\">\n                {/* <AccuracyGraph className=\"bar2\" \n                                    key = {plotData2[\"title\"]}\n                                    data ={plotData2[\"data\"]} \n                                    plotTitle = {plotData2[\"title\"]} \n                                    colors={plotData2[\"colors\"]} /> */}\n                      <GraphWidget2 \n                              className=\"pie2\"\n                              key = {progress}\n                              plotData2 = {plotData2}\n                              progress = {progress}\n                      />\n              </div>\n            </div>\n          </div>\n      </div>\n      <div className=\"interactive-container\">\n        <div className=\"guide-container\">\n          <GuideBox progress={progress} \n                    setProgress={setProgress}>\n                  \n          </GuideBox>\n        </div>\n        <div className=\"image-upload-widget box\">\n            <ImageComponent   \n                            className=\"image-upload\" \n                            setData={setData} \n                            setProgress={setProgress} \n                            progress={progress} data={data} \n                            setPlotData1={setPlotData1}\n                            setPlotData2={setPlotData2}></ImageComponent>\n        </div>\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}