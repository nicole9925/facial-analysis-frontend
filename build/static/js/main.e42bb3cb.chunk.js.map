{"version":3,"sources":["components/Header.js","components/UploadService.js","components/Upload.js","components/ImageComponent.js","text_data/modelInfo.js","components/Info.js","text_data/guide.js","components/Guide.js","components/GuideBox.js","components/AccuracyGraph.js","text_data/background.js","text_data/accuracy.js","App.js","index.js"],"names":["Header","props","menu","title","progress","activeStyle","color","idleStyle","className","Object","keys","map","menuItem","style","img","name","require","data","Promise","resolve","setTimeout","then","UploadComponent","withIcon","singleImage","label","buttonText","onChange","onImage","imgExtension","withPreview","labelStyles","fileContainerStyle","backgroundColor","padding","buttonStyles","Upload","useState","undefined","url","setImageUrl","errorMessage","setErrorMessage","setImage","setDisabled","raceIG","setRaceIG","genderIG","setGenderIG","ageIG","setAgeIG","raceG","setRaceG","genderG","setGenderG","ageG","setAgeG","raceBP","setRaceBP","genderBP","setGenderBP","ageBP","setAgeBP","vizType","setVizType","showViz","src","alt","failedImages","successImages","a","error","message","submit","setProgress","UploadService","UploadToServer","resp","console","log","pp_img","race_ig","gender_ig","age_ig","race_grad","gender_grad","age_grad","race_back","gender_back","age_back","setData","race","gender","age","setPlotData1","race_results","setPlotData2","age_results","onClick","override","css","loading","size","content","ImageComponent","1","header","body","2","Info","background","modelInfo","guide","Guide","text","cursor","speed","eraseSpeed","eraseDelay","typingDelay","displayTextRenderer","GuideBox","expected","setExpected","submitDisabled","setSubmitDisabled","submitForm","e","preventDefault","onValueChange","event","target","defaultValue","type","value","disabled","margin","AccuracyGraph","height","width","xScale","d3","range","yScale","domain","this","cats","d","val","cat","x","y","plotTitle","colors","svg","bgGradient","append","attr","xAxis","yAxis","call","selectAll","enter","bandwidth","id","React","Component","accuracy","Home","unbiased","plotData1","biased","plotData2","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e42bb3cb.chunk.js","sourcesContent":["import React from 'react'\nimport './Header.css'\n\nconst Header = (props) => {\n    const menu = {\n                \"getUpload\": \"Background\", \n                \"Uploading\": \"→\", \n                \"Uploaded\":\"Prediction\", \n                \"Input\": \"→\", \n                \"Analysis\": \"Analysis\"\n            };\n    let title = props.progress;\n    const activeStyle = {color: '#ffffff'}\n    const idleStyle = {color: '#40406B'}\n\n    return (\n        <div className=\"header-container\">\n            <div className=\"title-container\">\n                <h3 className=\"title-text\">Facial Analysis + Bias Visualization</h3>\n            </div>\n            <div className=\"nav-container\">\n                {\n                    Object.keys(menu).map(menuItem => \n                        <h3 className=\"title-labels\" style={title === menuItem ? activeStyle : idleStyle}>{menu[menuItem]}</h3>\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Header;","import resolve from 'resolve';\n\nclass UploadService {\n  async UploadToServer(img, name) {\n\n    // const data = new FormData();\n\n    // const parts = img[0].split(';')\n\n    // data.append('file', parts[2].split(\",\")[1]);\n    // data.append('filename', name);\n    \n    // let response = await fetch('https://facial-analysis-backend.herokuapp.com/api/upload/', {\n    //   method: 'POST',\n    //   body: data\n    // })\n    // let resp_data = await response.json()\n    // const resp = null;\n\n    // fetch('./text_data/image.json',{\n    //   headers : { \n    //     'Content-Type': 'application/json',\n    //     'Accept': 'application/json'\n    //     }\n    // }.then(function(response) {\n    //     resp = response.json()\n    // }))\n    const data = await require('./image.json');\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve()\n      }, 3000);\n    }).then(()=>{return data});\n    \n\n\n\n  }\n \n  // getImages() {\n  //   return http.get(\"/img\");\n  // }\n}\n\nexport default new UploadService();","import React, {useState} from 'react'\nimport ImageUploader from 'react-images-upload'\nimport UploadService from './UploadService'\nimport CircleLoader from 'react-spinners/CircleLoader'\nimport { css } from \"@emotion/core\";\nimport './Upload.css';\nconst UploadComponent = props => (\n    <form>\n        <ImageUploader\n            key='image-uploader'\n            withIcon={false}\n            singleImage={true}\n            label=\"Please upload an image with a single face.\"\n            buttonText=\"Choose file\"\n            onChange={props.onImage}\n            imgExtension={['.jpg', '.png', '.jpeg']}\n            withPreview={true}\n            labelStyles = {{color: '#ffffff'}}\n            fileContainerStyle={{backgroundColor: 'var(--primary)', padding: '20px'}}\n            buttonStyles = {{backgroundColor: 'var(--highlight)'}}\n        />\n    </form>\n);\nconst Upload = (props) => {\n\n    const [url, setImageUrl] = useState(undefined);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [img, setImage] = useState(null);\n    const [disableButton, setDisabled] = useState(true);\n    const [raceIG, setRaceIG] = useState(null);\n    const [genderIG, setGenderIG] = useState(null);\n    const [ageIG, setAgeIG] = useState(null);\n    const [raceG, setRaceG] = useState(null);\n    const [genderG, setGenderG] = useState(null);\n    const [ageG, setAgeG] = useState(null);\n    const [raceBP, setRaceBP] = useState(null);\n    const [genderBP, setGenderBP] = useState(null);\n    const [ageBP, setAgeBP] = useState(null);\n\n    const [vizType, setVizType] = useState(\"grad\");\n\n    const showViz = () => {\n        switch(vizType) {\n            case \"grad\":\n                return (<>\n                    <div className=\"ig-container\">\n                        <img className = \"image-container-ig\" src={raceG} alt=\"Race Grad\"></img>\n                        <img className = \"image-container-ig\" src={genderG} alt=\"Gender Grad\"></img>\n                        <img className = \"image-container-ig\" src={ageG} alt=\"Age Grad\"></img>\n                    </div>\n                </>)\n            case \"ig\":\n                return(<>\n                        <div className=\"ig-container\">\n                            <img className = \"image-container-ig\" src={raceIG} alt=\"Race Integrated Grad\"></img>\n                            <img className = \"image-container-ig\" src={genderIG} alt=\"Gender Integrated Grad\"></img>\n                            <img className = \"image-container-ig\" src={ageIG} alt=\"Age Integrated Grad\"></img>\n                        </div>\n                </>)\n            case \"bp\":\n                return(<>\n                        <div className=\"ig-container\">\n                            <img className = \"image-container-ig\" src={raceBP} alt=\"Race Back Prop\"></img>\n                            <img className = \"image-container-ig\" src={genderBP} alt=\"Gender Back Prop\"></img>\n                            <img className = \"image-container-ig\" src={ageBP} alt=\"Age Back Prop\"></img>\n                        </div>\n                </>)\n\n        }\n    }\n    \n    const onImage = async (failedImages, successImages) => {\n        try {\n            setDisabled(false)\n            setImage(successImages)\n\n        } catch(error) {\n            setErrorMessage(error.message);\n\n        } \n    }\n\n    const loading = () => {\n        const override = css`\n        display: block;\n        margin-left: 0px;\n        `;\n        \n        return(\n            <CircleLoader \n            className={'loader'}\n            color={'#80D8FF'}\n            loading={true}\n            size={150}\n            css={override}\n            />\n        )\n    }\n\n    const submit = async () => {\n        props.setProgress(\"Uploading\");\n        // const parts = img[0].split(';');\n        const name = '';\n\n        const resp = await UploadService.UploadToServer(img, name)\n        console.log(resp)\n        setImageUrl('data:image/jpeg;base64,' + resp.pp_img)\n\n        setRaceIG( 'data:image/jpeg;base64,' + resp.race_ig)\n        setGenderIG( 'data:image/jpeg;base64,' + resp.gender_ig)\n        setAgeIG( 'data:image/jpeg;base64,' + resp.age_ig)\n\n        setRaceG( 'data:image/jpeg;base64,' + resp.race_grad)\n        setGenderG( 'data:image/jpeg;base64,' + resp.gender_grad)\n        setAgeG( 'data:image/jpeg;base64,' + resp.age_grad)\n\n        setRaceBP( 'data:image/jpeg;base64,' + resp.race_back)\n        setGenderBP( 'data:image/jpeg;base64,' + resp.gender_back)\n        setAgeBP( 'data:image/jpeg;base64,' + resp.age_back)\n\n        props.setProgress('Uploaded')\n        props.setData({\"race\": resp.race, \"gender\": resp.gender, \"age\": resp.age})\n        props.setPlotData1({\"title\": \"Race Prediction\", \"data\": resp.race_results, \"colors\": [\"#9900ff\", \"#00ccff\"]})\n        props.setPlotData2({\"title\": \"Age Prediction\", \"data\": resp.age_results, \"colors\": [\"#ff4aa7\", \"#e04646\"]})    }\n \n    const content = (props) => {\n        const progress = props.progress\n        switch(progress) {\n            case 'getUpload':\n                return <>\n                <div className=\"upload-container\">\n                    <UploadComponent onImage={onImage} url={url} />\n                    <button className=\"submit\" onClick={submit}>Submit</button>\n                </div>\n                </>\n                \n            case 'Uploading':\n                return loading()\n            case 'Uploaded':\n                return (\n                <>\n                    <div className=\"image-container\">\n                        <img className = \"pp-img\" src={url} alt=\"Your Face\"></img>\n                    </div>\n                </>\n                )\n            case 'uploadError':\n                return (\n                    <>\n                        <div className=\"error-message\">{errorMessage}</div>\n                        <div className=\"upload-container\">\n                            <UploadComponent onImage={onImage} url={url} />\n                            <button className=\"submit\" onClick={submit}>Submit</button>\n                        </div>\n                    </>\n                )\n            case 'Analysis':\n                return (\n                <>  \n                <div className=\"grid\">\n                    <div className=\"viz-headers\">\n                        <h2>Race</h2>\n                        <h2>Gender</h2>\n                        <h2>Age</h2>\n                    </div>\n\n                    {showViz()}\n\n                    <div className=\"viz-button-container\">\n                        <button className=\"viz-button\" name=\"grad\" onClick={() => setVizType('grad')}>Grad-CAM</button>\n                        <button className=\"viz-button\" name=\"ig\" onClick={() => setVizType('bp')}>Guided BP</button>\n                        <button className=\"viz-button\" name=\"bp\" onClick={() => setVizType('ig')}>Integrated Grad</button>\n                    </div>                    \n                </div>\n\n\n                </>\n                )\n            default:\n                return <>\n                    <div className=\"image-container\">\n                        <img className = \"pp-img\" src={url} alt=\"Your Face\"></img>\n                    </div>\n                </>\n        }\n        \n    }\n\n    return (\n        <div>\n            {content(props)}\n        </div>\n    )\n}\n\nexport default Upload;","import React from 'react'\nimport Upload from './Upload'\nimport './ImageComponent.css'\n\nconst ImageComponent = (props) => {\n    \n    var progress = props.progress\n\n    const content = () => {\n        switch(progress) {  \n            case 'getUpload':\n                return (\n                    <>\n                    <div className=\"upload-container\">\n                        <Upload setProgress={props.setProgress} \n                                setData={props.setData} \n                                setPlotData1={props.setPlotData1}\n                                setPlotData2={props.setPlotData2} \n                                progress={progress}></Upload>\n                    </div>\n                    </>\n                )\n            default:\n                return (\n                    <>\n                    <div className=\"upload-container\">\n                        <Upload setProgress={props.setProgress} \n                                setData={props.setData}\n                                setPlotData1={props.setPlotData1} \n                                setPlotData2={props.setPlotData2} \n                                progress={progress}></Upload>\n                    </div>\n                    </>\n                )\n        }\n    }\n    return (\n        <>\n            <div>\n                {content()}\n            </div>\n        </>\n    )\n}\n\nexport default ImageComponent;","const modelInfo =  {1: {\n    header: \"Model\",\n    body: \"In order to obtain these results, we trained a model on over 80,000 equally distributed images. We can peek at the inner workings of the model through visualizations.\"\n},\n2: {\n    header: \"XAI\",\n    body: \"The concept of visualizing models in order to ensure confidence is called explainable AI, or XAI. Here, we show two methods of explainable AI: integrated gradients and grad-cam. These visualizations help us confirm that our model is fair and accurate. We'll see why this is important in the next slide.\"\n}\n};\n\nexport default {modelInfo};","import React from 'react'\nimport './Info.css'\nimport modelInfo from '../text_data/modelInfo'\n\nconst Info = (props) => {\n    var progress = props.progress;\n    var background = props.data;\n    // console.log(background)\n    const content = () => {\n        switch(progress) {\n            case 'getUpload':\n                return (\n                    <>\n                    <div className=\"background-container\">\n                        <h3>{background.background[1][\"header\"]}</h3>\n                        <p>{background.background[1][\"body\"]}</p>\n\n                        <h3>{background.background[2][\"header\"]}</h3>\n                        <p>{background.background[2][\"body\"]}</p>\n                    </div>\n                    </>\n                )\n            case 'Uploading':\n                return (\n                    <>\n                    <div className=\"background-container\">\n                        <h3>{background.background[1][\"header\"]}</h3>\n                        <p>{background.background[1][\"body\"]}</p>\n\n                        <h3>{background.background[2][\"header\"]}</h3>\n                        <p>{background.background[2][\"body\"]}</p>\n                    </div>\n                    </>\n                )\n            case 'Uploaded':\n                return ( <>\n                <div className=\"results-container\">\n                    <h3><strong>OUR GUESSES:</strong></h3>\n                    <div className=\"results\">\n                        <h5><b>Race:</b></h5>\n                        <h5>{background[\"race\"]}</h5>\n                    </div>\n                    <div className=\"results\">\n                        <h5><b>Gender:</b></h5>\n                        <h5>{background[\"gender\"]}</h5>\n                    </div>\n                    <div className=\"results\">\n                        <h5><b>Age:</b></h5>\n                        <h5>{background[\"age\"]}</h5>\n                    </div>\n                </div>\n                </>\n                )\n            case 'Input':\n                return ( <>\n                <div className=\"correction-container\">\n                </div>\n                </>\n                )\n            case 'Analysis':\n                return ( <>\n                    <div className=\"background-container\">\n                        <h3>{modelInfo.modelInfo[1][\"header\"]}</h3>\n                        <p>{modelInfo.modelInfo[1][\"body\"]}</p>\n\n                        <h3>{modelInfo.modelInfo[2][\"header\"]}</h3>\n                        <p>{modelInfo.modelInfo[2][\"body\"]}</p>\n                    </div>\n                </>\n                )\n            default:\n                return (\n                    <>\n                    </>\n                )\n        }\n    }\n    return (\n        <>\n            <div>\n                {content()}\n            </div>\n        </>\n    )\n}\n\nexport default Info;","const guide =  {\"getUpload\": {\n    \"text\": \"Hello there! To start, please input an image of a face. Or, read through the background information on the left!\",\n    \"speed\": 20,\n    \"eraseDelay\": 10000000,\n    \"typingDelay\": 0,\n    \"eraseSpeed\": 30},\n\"Uploading\": {\"text\": \"Loading...this might take a while...\", \n    \"speed\": 20,\n    \"eraseDelay\": 1000,\n    \"typingDelay\": 100,\n    \"eraseSpeed\": 30},\n\"Uploaded\": {\"text\": \"Your results are out! Is this what you expected?\", \n    \"speed\": 20,\n    \"eraseDelay\": 10000000,\n    \"typingDelay\": 100,\n    \"eraseSpeed\": 30},\n\"Input\": {\"text\": \"You got us! Please input the correct information.\", \n    \"speed\": 20,\n    \"eraseDelay\": 10000000,\n    \"typingDelay\": 100,\n    \"eraseSpeed\": 30},\n\"Analysis\": {\"text\": \"Here is what our model focused on with respect to our predictions.\", \n\"speed\": 20,\n\"eraseDelay\": 10000000,\n\"typingDelay\": 100,\n\"eraseSpeed\": 30}};\n\nexport default {guide};","import React from 'react';\nimport guide from '../text_data/guide'\nimport ReactTypingEffect from 'react-typing-effect';\n \n const Guide = (props) => {\n\n    const beginTyping = () => {\n        return (<>\n            <ReactTypingEffect\n              key = {props.progress}\n              text={guide.guide[props.progress][\"text\"]}\n              cursor={cursor => <h1 style={{color: \"#ffffff\"}}>{cursor}</h1>}\n              speed = {guide.guide[props.progress][\"speed\"]}\n              eraseSpeed = {guide.guide[props.progress][\"eraseSpeed\"]}\n              eraseDelay = {guide.guide[props.progress][\"eraseDelay\"]}\n              typingDelay = {guide.guide[props.progress][\"typingDelay\"]}\n              displayTextRenderer={(text) => {\n                return (\n                  <h4>\n                    {text}\n                  </h4>\n                );\n              }}        \n            />\n          </>\n            )\n    }\n\n    // const listen = () => {\n    //     switch(progress) {\n    //         case 'getUpload':\n    //             setContent(guide.guide['getUpload'])\n    //         case 'Uploading': \n    //             setContent(guide.guide['Uploading'])\n    //     }\n    // }\n\n    return (\n        <>\n            {beginTyping(props)}\n        </>\n    )\n }\n\n\nexport default Guide;","import React, {useState} from 'react'\nimport Guide from './Guide'\nimport './GuideBox.css'\n\nconst GuideBox = (props) => {\n\n    const [expected, setExpected] = useState(undefined)\n    const [submitDisabled, setSubmitDisabled] = useState(true);\n\n    const submitForm  = async (e) => {\n        e.preventDefault()\n        if (expected === 'Yes') {\n            props.setProgress('Analysis')\n            console.log(props.progress)\n        } else if (expected === 'No') {\n            props.setProgress('Input')\n        }\n    }\n    \n    const onValueChange = (event) => {\n        setExpected(event.target.defaultValue)\n        setSubmitDisabled(false)\n        // setExpected\n    }\n\n    const content = () => {\n        switch(props.progress) {  \n            case 'getUpload':\n                return (\n                    <>\n                    <div className=\"guide-bounding\">\n                        <Guide key = {props.progress} className=\"guide\" progress={props.progress}></Guide>\n                    </div>\n                    </>\n                )\n            case 'Uploading':\n                return ( <>\n                    <div className=\"guide-bounding\">\n                        <Guide key = {props.progress} className=\"guide\" progress={props.progress}></Guide>\n                    </div>\n                </>\n                )\n            case 'Uploaded':\n                return ( <>\n                    <div className=\"guide-bounding\">\n                        <div className = \"guide-split\">\n                            <Guide key = {props.progress} className=\"guide\" progress={props.progress}></Guide>\n                            <div className = \"guide-input\">\n                                <p className = \"guide-selections\">\n                                    <input className= \"options yes\" type=\"radio\" name=\"q2\" value=\"Yes\" onChange={onValueChange}/>Yes\n                                    <input className= \"options no\" type=\"radio\" name=\"q2\" value=\"No\" onChange={onValueChange}/>No\n                                    <button className = \"guide-submit submit\" onClick={submitForm} disabled={submitDisabled}>submit</button>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </>\n                )\n            case 'Input':\n                return ( <>\n                    <div className=\"guide-bounding\">\n                        <Guide key = {props.progress} className=\"guide\" progress={props.progress}></Guide>\n                    </div>\n                </>\n                )\n            case 'Analysis':\n                return ( <>\n                    <div className=\"guide-bounding\">\n                        <Guide key = {props.progress} className=\"guide\" progress={props.progress}></Guide>\n                    </div>\n                </>\n                )\n            default:\n                return (\n                    <>\n\n                    </>\n                )\n        }\n    }\n    return (\n        <>\n            <div>\n                {content()}\n            </div>\n        </>\n    )\n}\n\nexport default GuideBox;","import React, { useRef, Component, useEffect } from 'react';\nimport * as d3 from \"d3\";\nimport './AccuracyGraph.css'\n\nconst margin = {\"right\": 20, \"left\": 30, \"top\": 30, \"bottom\": 30};\n\nclass AccuracyGraph extends React.Component {\n    \n    constructor(props) {\n        super(props)\n    }\n\n\n    height = 200;\n    width = 300;\n\n\n    xScale  = d3.scaleBand()\n        .range([ margin.left, this.width-margin.right ])\n\n    yScale = d3.scaleLinear()   \n        .domain([100, 0])\n        .range([margin.top, this.height-margin.top-margin.bottom]);\n\n    componentDidMount() {\n\n        const data = this.props.data\n\n        const values = data.map(function(d) {return d.val})\n        const cats = data.map(function(d) {return d.cat})\n\n        const x = this.xScale.domain(cats);;\n        const y = this.yScale;\n        const height = this.height;\n        const width = this.width;\n        const title = this.props.plotTitle;\n        const colors = this.props.colors;\n        console.log(colors)\n\n        const svg = d3.select(`#${this.props.className}`)\n\n        // Gradients\n        const defs = svg.append('defs');\n\n        const bgGradient = defs\n          .append('linearGradient')\n          .attr('id', `${this.props.className}-bg-gradient`)\n          .attr('gradientTransform', 'rotate(90)');\n      \n        bgGradient\n          .append('stop')\n          .attr('stop-color', colors[0])\n          .attr('offset', '0%');\n        bgGradient\n          .append('stop')\n          .attr('stop-color', colors[1])\n          .attr('offset', '100%');\n      \n        // Axes\n        const xAxis = d3.axisBottom(this.xScale);\n        const yAxis = d3.axisLeft(this.yScale);\n    \n        svg.append(\"g\")\n        .attr(\"class\", \"accuracy-axis\")\n        .attr(\"transform\", `translate(0, ${this.height-margin.top-margin.bottom})`)\n        .call(xAxis)\n        .selectAll(\"text\")\n        .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\n        .style(\"text-anchor\", \"end\");\n\n        svg.append(\"g\")\n        .attr(\"class\", \"accuracy-axis\")\n        .attr(\"transform\", `translate(${margin.left}, 0)`)\n        .call(yAxis)\n\n        // Bars\n        svg.selectAll(\"bars\")\n        .data(data)\n        .enter()\n        .append(\"rect\")\n            .attr(\"x\", function(d) {return x(d.cat) + x.bandwidth()/4})\n            .attr(\"y\", function(d) {return y(d.val)})\n            .attr(\"width\", x.bandwidth()/2)\n            .attr(\"height\", function(d) { return height-margin.top-margin.bottom - y(d.val)})\n            .attr(\"fill\", `url(#${this.props.className}-bg-gradient)`)\n        \n        svg.append(\"g\")\n        .append(\"text\")\n        .attr(\"x\", width/2)\n        .attr(\"y\", margin.top)\n        .attr(\"fill\", \"white\")\n        .text(title)\n        .style(\"text-anchor\", \"middle\");\n\n\n    }\n    \n    render() {\n        return(\n            <>\n            <svg id = {this.props.className} width={this.width} height={this.height}>\n            </svg>\n            </>\n        )\n    }\n}\n\nexport default AccuracyGraph;\n","const background =  {1: {\n    header: \"What is this?\",\n    body: \"Whether it is through self-driving cars, phone facial recognition, or security cameras, automated softwares that analyze our faces have become a pervasive element of our everyday lives. The enigmatic nature of machine learning, especially in relation to facial recognition seems simultaneously terrifying and confusing. But it has the potential to be neither! \"\n},\n2: {\n    header: \"Privacy\",\n    body: \"Rest assured - none of your data will be stored\"\n}\n};\n\nexport default {background};","const accuracy =  {\n                \"unbiased\": {\"title\": \"Unbiased Accuracy (%)\",\n                \"data\": [\n                    {\"cat\": \"Race\", \"val\": 56}, \n                    {\"cat\": \"Gender\", \"val\": 91}, \n                    {\"cat\": \"Age\", \"val\": 66}\n                    ],\n                \"colors\": [\"#E323FF\", \"#7517F8\"]\n            },\n                \"biased\": {\n                    \"title\": \"Biased Accuracy (%)\",\n                    \"data\": [\n                        {\"cat\": \"Race\", \"val\": 40}, \n                        {\"cat\": \"Gender\", \"val\": 80}, \n                        {\"cat\": \"Age\", \"val\": 50}\n                        ],\n                    \"colors\": [\"#00FFC7\", \"#00A3FF\"]\n                }};\nexport default accuracy;","import React, {useState} from 'react'\nimport './App.css';\nimport Header from './components/Header'\nimport ImageComponent from './components/ImageComponent'\nimport Info from './components/Info'\nimport GuideBox from './components/GuideBox'\nimport AccuracyGraph from './components/AccuracyGraph'\nimport background from './text_data/background'\nimport accuracy from './text_data/accuracy'\n\nfunction Home() {\n\n  const [progress, setProgress] = useState('getUpload');\n  const [data, setData] = useState(background)\n  const [plotData1, setPlotData1] = useState(accuracy.unbiased)\n  const [plotData2, setPlotData2] = useState(accuracy.biased)\n  return (\n    <>\n    <header>\n      <Header className=\"header\" progress={progress}></Header>\n    </header>\n    {/* <h2 className=\"page-title\">{title}</h2> */}\n    <div className=\"main-container\">\n      <div className=\"text-container\">\n        <div className=\"info-widget box\">\n          <Info data={data} progress={progress}></Info>\n          </div>\n          <div className=\"stats-container\">\n            <div className=\"stats-widget1 box\">\n              <div className=\"graph-box\">\n                <AccuracyGraph className=\"bar\" \n                                key = {plotData1[\"title\"]}\n                                data ={plotData1[\"data\"]} \n                                plotTitle = {plotData1[\"title\"]} \n                                colors={plotData1[\"colors\"]} />\n              </div>\n            </div>\n            <div className=\"stats-widget2 box\">\n              <div className=\"graph-box\">\n                <AccuracyGraph className=\"bar2\" \n                                    key = {plotData2[\"title\"]}\n                                    data ={plotData2[\"data\"]} \n                                    plotTitle = {plotData2[\"title\"]} \n                                    colors={plotData2[\"colors\"]} />\n              </div>\n            </div>\n          </div>\n      </div>\n      <div className=\"interactive-container\">\n        <div className=\"guide-container\">\n          <GuideBox progress={progress} \n                    setProgress={setProgress}>\n                  \n          </GuideBox>\n        </div>\n        <div className=\"image-upload-widget box\">\n            <ImageComponent className=\"image-upload\" \n                            setData={setData} \n                            setProgress={setProgress} \n                            progress={progress} data={data} \n                            setPlotData1={setPlotData1}\n                            setPlotData2={setPlotData2}></ImageComponent>\n        </div>\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}